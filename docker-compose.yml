services:
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3020:3000'
    restart: on-failure
    tty: true
    volumes:
      - .:/usr/local/src/app
      - /usr/local/src/app/node_modules
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - db

  db:
    image: postgres:latest
    container_name: db
    ports:
      - '${DB_PORT}:5432'
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  adminer:
    image: adminer
    restart: always
    ports:
      - 3021:8080
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db

volumes:
  node_modules:
  pgdata:
